name: 🧪 CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      triggered_by:
        description: 'Triggered by workflow'
        required: false
        default: 'manual'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # Check code formatting
  fmt:
    name: 🎨 Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - name: Check formatting
        run: cargo fmt --all -- --check

  # Run clippy lints
  clippy:
    name: 📎 Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  # Build WASM library
  build-wasm:
    name: 🕸️ Build WASM
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
      - uses: Swatinem/rust-cache@v2

      # Install wasm-pack
      - name: 📦 Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      # Build WASM library
      - name: 🔨 Build WASM
        run: ./build-wasm.sh

      # Upload WASM artifacts
      - name: 📤 Upload WASM artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wasm-build
          path: pkg/

  # Build example application
  build-example:
    name: 🎯 Build Example
    runs-on: ubuntu-latest
    needs: build-wasm
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
      - uses: Swatinem/rust-cache@v2

      # Install wasm-pack
      - name: 📦 Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      # Setup Node.js
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'

      # Build WASM library first
      - name: 🔨 Build WASM
        run: ./build-wasm.sh

      # Build example
      - name: 🔨 Build Example
        run: |
          cd example
          npm install
          npm run build

      # Upload example artifacts
      - name: 📤 Upload Example artifacts
        uses: actions/upload-artifact@v4
        with:
          name: example-build
          path: example/dist/

  # Documentation build
  docs:
    name: 📚 Build Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
      - uses: Swatinem/rust-cache@v2
      - name: 📚 Build docs
        run: cargo doc --no-deps --all-features
        env:
          RUSTDOCFLAGS: --cfg docsrs
      - name: 📤 Upload docs
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: target/doc/
